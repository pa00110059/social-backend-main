<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rick.mapper.HeadlineMapper">

    <resultMap id="BaseResultMap" type="com.rick.pojo.Headline">
        <id property="hid" column="hid"/>
        <result property="title" column="title"/>
        <result property="article" column="article"/>
        <result property="type" column="type"/>
        <result property="publisher" column="publisher"/>
        <result property="pageViews" column="page_views"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="version" column="version"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <sql id="Base_Column_List">
        hid
        ,title,article,type,publisher,page_views,
        create_time,update_time,version,is_deleted
    </sql>

    <!--      IPage<Map> selectMyPage(IPage page, @Param("portalVo") PortalVo portalVo);  -->
    <!--  List<Map>  -->
    <select id="selectMyPage" resultType="map">
        SELECT hid,
        title,
        type,
        page_views AS pageViews,
        DATEDIFF(HOUR, create_time, GETDATE()) AS pastHours,
        publisher
        FROM news_headline
        WHERE is_deleted = 0
        <if test="portalVo.keyWords != null and portalVo.keyWords.length() > 0">
            AND title LIKE '%' + #{portalVo.keyWords} + '%'
        </if>
        <if test="portalVo.type != null and portalVo.type != 0">
            AND type = #{portalVo.type}
        </if>
        ORDER BY ISNULL(create_time, GETDATE()) DESC
    </select>

    <select id="queryDetailMap" resultType="map">
        SELECT h.hid,
        h.title,
        COALESCE(h.article, '') AS article,  <!-- 避免 article 為 NULL -->
        h.type,
        h.version,
        t.tname AS typeName,
        h.page_views AS pageViews,
        DATEDIFF(HOUR, h.create_time, GETDATE()) AS pastHours,
        h.publisher,
        u.nick_name AS author
        FROM news_headline h
        LEFT JOIN news_type t ON h.type = t.tid
        LEFT JOIN news_user u ON h.publisher = u.uid
        WHERE h.hid = #{hid} AND h.is_deleted = 0
    </select>

</mapper>
